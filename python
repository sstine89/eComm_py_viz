# CU-86aacg3vh: Added placeholder for ClickUp
import pandas as pd
import mysql.connector
import plotly.express as px

# 1️⃣ Connect to your Acme Co MySQL database
conn = mysql.connector.connect(
    host="YOUR_DB_HOST",
    user="YOUR_DB_USER",
    password="YOUR_DB_PASSWORD",
    database="YOUR_DB_NAME"
)
query = """
WITH cte_emp_projects AS (
  SELECT
    e.emp_id,
    e.name,
    e.department,

    pr.product_name,
    p.store_id,
    s.store_name,
    p.ecommerce_id,
    ec.platform,
    p.revenue,
    DATEDIFF(p.end_date, p.start_date) AS project_duration_days,
    ROW_NUMBER() OVER (PARTITION BY e.emp_id ORDER BY p.start_date DESC) AS proj_rank,
    COUNT(*) OVER (PARTITION BY e.emp_id) AS total_projects
  FROM employees e
  JOIN projects p ON e.emp_id = p.emp_id
  LEFT JOIN products pr ON p.product_id = pr.product_id
  LEFT JOIN stores s ON p.store_id = s.store_id
  LEFT JOIN ecommerce ec ON p.ecommerce_id = ec.ecom_id
)
SELECT
  emp_id,
  name,
  department,
  total_projects,
  SUM(revenue) AS total_revenue,
  AVG(revenue) AS avg_revenue,
  AVG(project_duration_days) AS avg_duration_days,
  SUM(CASE WHEN platform = 'Web' THEN revenue ELSE 0 END) AS web_revenue,
  SUM(CASE WHEN platform = 'Mobile' THEN revenue ELSE 0 END) AS mobile_revenue
FROM cte_emp_projects
WHERE proj_rank = 1
GROUP BY emp_id, name, department, total_projects
ORDER BY total_revenue DESC
LIMIT 50;
"""
# 2️⃣ Execute and load into DataFrame
df = pd.read_sql(query, conn)
conn.close()

# 3️⃣ Visualize using Plotly
fig = px.bar(
    df,
    x='name',
    y='total_revenue',
    color='department',
    hover_data=['avg_revenue', 'total_projects'],
    title="Top 50 Employees by Revenue (Latest Project)"
)
fig.update_layout(xaxis_title='Employee', yaxis_title='Total Revenue')
fig.show()
